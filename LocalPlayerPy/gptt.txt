
#Arquivo principal
import sys
import os
import pygame
import Funcao

user_home_directory = os.path.expanduser("~")
pasta_Musica = f'{user_home_directory}\\Music\\'

# Inicializando Pygame
pygame.init()
pygame.mixer.init()
pygame.display.set_caption("MusicFlow")
icone = pygame.image.load('.\\LocalPlayerPy\\icone\\MusicFlow.ico') 
pygame.display.set_icon(icone)

# Tela
info_tela = pygame.display.Info()
SCREEN_WIDTH = int(1920/ 2)
SCREEN_HEIGHT = int(1080 / 1.5)
MUSIC_SCREEN_WIDTH = 300
MUSIC_SCREEN_HEIGHT = 450
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT), pygame.RESIZABLE)
clock = pygame.time.Clock()

# Variáveis
fonte = "Impact"
fonte_titulo = pygame.font.SysFont(fonte, 30)
tela_principal = 'principal'

# Função para ajustar o tamanho da tela
def ajustar_tamanho_tela(largura, altura, redimensionavel=True):
    global screen
    Redmensionavel = pygame.RESIZABLE if redimensionavel else 0
    screen = pygame.display.set_mode((largura, altura), Redmensionavel)

Funcao_Listar_Diretorio = Funcao.listar_conteudo(pasta_Musica)[0]

while True:
    # Ajustar o tamanho da tela com base na tela atual
    if tela_principal == 'musica':
        if screen.get_width() != MUSIC_SCREEN_WIDTH or screen.get_height() != MUSIC_SCREEN_HEIGHT:
            ajustar_tamanho_tela(MUSIC_SCREEN_WIDTH, MUSIC_SCREEN_HEIGHT, redimensionavel=False)
    elif tela_principal in ['principal', 'botao']:
        if screen.get_width() != SCREEN_WIDTH or screen.get_height() != SCREEN_HEIGHT:
            SCREEN_WIDTH = int(1920/ 2)
            SCREEN_HEIGHT = int(1080 / 1.5)
            ajustar_tamanho_tela(SCREEN_WIDTH, SCREEN_HEIGHT, redimensionavel=True)

    # Preencher o fundo
    screen.fill(Funcao.cor('grey'))

    if tela_principal == 'principal':
        if Funcao.desenhar_botao(screen, 20, 30, texto="MusicFlow", cor='white', cor_hover='blue'):
            tela_principal = 'principal'
        if Funcao.desenhar_botao(screen, 20, 100, texto="Pastas", cor='white', cor_hover='blue'):    
            tela_principal = 'pasta'    
        if Funcao.desenhar_botao(screen, 20, 170, texto="Music", cor='white', cor_hover='blue'):
            tela_principal = 'musica'
    
    elif tela_principal == 'pasta':
        if Funcao.desenhar_botao(screen, 20, 30, texto="MusicFlow", cor='white', cor_hover='blue'):
            tela_principal = 'principal'
        y_pos = 100  # Posição inicial no eixo Y
        for pasta in Funcao_Listar_Diretorio:
            if Funcao.desenhar_botao(screen, 20, y_pos, texto=pasta, cor='white', cor_hover='blue'):
                tela_principal = 'Playlist'
            y_pos += 70  # Ajuste o espaçamento entre os botões
    
    elif tela_principal == 'musica':    
        if Funcao.desenhar_botao(screen, 20, 30, texto="MusicFlow", cor='white', cor_hover='blue'):
            tela_principal = 'principal'
    
    elif tela_principal == 'Playlist':
        if Funcao.desenhar_botao(screen, 20, 30, texto="MusicFlow", cor='white', cor_hover='blue'):
                tela_principal = 'principal'
        y_pos = 100
        for pasta in Funcao_Listar_Diretorio:
            Funcao_Listar_Musica = Funcao.listar_conteudo(f'{pasta_Musica}\\{pasta}')[1]
            for musica in Funcao_Listar_Musica:
                if Funcao.desenhar_botao(screen, 20, y_pos, texto=musica, cor='white', cor_hover='blue'):
                    tela_principal = 'Playlist'
                y_pos += 70  # Ajuste o espaçamento entre os botões
        
    # Eventos
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        
        if event.type == pygame.VIDEORESIZE and tela_principal in ['principal', 'botao']:
            SCREEN_WIDTH, SCREEN_HEIGHT = event.w, event.h
            if SCREEN_HEIGHT < 450:
                SCREEN_HEIGHT = 450
            if SCREEN_WIDTH < 300:
                SCREEN_WIDTH = 300
            ajustar_tamanho_tela(SCREEN_WIDTH, SCREEN_HEIGHT, redimensionavel=True)
    
    pygame.display.flip()
    clock.tick(10)

#Arquivo de funcao
import pygame
import os

pygame.init()
info_tela = pygame.display.Info()
SCREEN_WIDTH = int(info_tela.current_w/2)
SCREEN_HEIGHT = int(info_tela.current_h/1.5)
user_home_directory = os.path.expanduser("~")
pasta_Musica = f'{user_home_directory}\\Music\\'
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT), pygame.RESIZABLE)

fonte = "Impact"
fonte_titulo = pygame.font.SysFont(fonte, 30)

def desenhar_botao(screen, x, y, texto, cor, cor_hover):
    # Obtemos a posição do mouse e o estado de clique
    posicao_mouse = pygame.mouse.get_pos()
    clique_mouse = pygame.mouse.get_pressed()

    # Renderizando o texto do botão
    text_surface = fonte_titulo.render(texto, True, (0, 0, 0))
    text_rect = text_surface.get_rect(topleft=(x, y))

    # Verificando se o mouse está sobre o botão
    if text_rect.collidepoint(posicao_mouse):
        pygame.draw.rect(screen, pygame.Color(cor_hover), text_rect.inflate(20, 20), border_radius=10)
        if clique_mouse[0]:  # Botão esquerdo do mouse foi clicado
            return True
    else:
        pygame.draw.rect(screen, pygame.Color(cor), text_rect.inflate(20, 20), border_radius=10)

    # Desenhando o texto do botão
    screen.blit(text_surface, text_rect)
    
    return False

def cor(nome_cor):
    cor = pygame.Color(nome_cor)  
    return (cor.r, cor.g, cor.b)

def Home(screen, texto, pos, cor_texto, cor_rect=(255, 255, 255)):
    texto_surface = fonte_titulo.render(texto, True, cor_texto)
    texto_rect = texto_surface.get_rect(center=pos)

    pygame.draw.rect(screen, cor_rect, texto_rect.inflate(20, 20), border_radius=10)
    screen.blit(texto_surface, texto_rect)

    return texto_rect

def Titulo(screen, titulo, cor_titulo, fonte=None):
    if fonte is None:
        fonte = pygame.font.SysFont('Arial', 30)
    
    texto = fonte.render(titulo, True, cor_titulo)
    screen.blit(texto, (10, 10))

def listar_conteudo(diretorio):
    conteudo = os.listdir(diretorio)
    pastas = [item for item in conteudo if os.path.isdir(os.path.join(diretorio, item))]
    musicas = [item for item in conteudo if item.endswith('.mp3') or item.endswith('.wav') or item.endswith('.mp4')]
    return pastas, musicas

def tocar_musica(musica):
    caminho_musica = os.path.join(pasta_Musica, musica)  # Caminho completo para a música
    pygame.mixer.music.load(caminho_musica)  # Carrega a música
    pygame.mixer.music.play()  # Toca a música

